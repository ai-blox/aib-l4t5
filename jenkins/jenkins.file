node('jenkins-ec2-plugin-slave') {

}

pipeline {
	agent {
        dockerfile {
            dir 'jenkins'
            filename 'Dockerfile'
        }
    }
/*
	agent {
        dockerfile {
            dir 'jenkins'
            filename 'full.Dockerfile'
            additionalBuildArgs """ --build-arg TAG=r32.7.1 \
                                    --build-arg TEGRA_KERNEL_OUT=ai-blox_sdk/aib-l4t-r32.7.1 \
                                    --build-arg LOCALVERSION=-tegra"""
        }
	} */
	stages {
        stage('Pull Kernel') {
            steps {
                slackSend (color: '#7CFC00', message: "STARTED: L4T SP5 build -- Build ${env.BUILD_NUMBER} (<${env.BUILD_URL}|Open>)")
                sh '''#!/bin/bash -ex
                export MY_DIR=$(pwd)
                echo $MY_DIR

                git submodule init
                git submodule update
                git submodule foreach 'git checkout aib-l4t-r35.2.1'

                cd kernel/nvidia/drivers/net/ethernet/nvidia/nvethernet
                git submodule init
                git submodule update
                cd nvethernetrm
                git checkout aib-l4t-r35.2.1
                cd $MY_DIR
                '''
            }
        }
        stage('Build Kernel') {
            steps {
                sh '''#!/bin/bash -ex
                export TOOLCHAIN_SRC=bootlin-toolchain-gcc-93 
                export TOOLCHAIN_DIR=gcc-9.3-glibc-2.31
                export KERNEL_SRC=l4t-sources-35-1
                export KERNEL_DIR=kernel-5.10
                export CROSS_COMPILE=/l4t5-gcc/bin/aarch64-buildroot-linux-gnu-
                export JETPACK=$HOME/nvidia/nvidia_sdk/JetPack_5.0.2_Linux_JETSON_XAVIER_NX_TARGETS/Linux_for_Tegra
                export KERNEL_OUT=$HOME/images
                export KERNEL_MODULES_OUT=$JETPACK/images/modules

                mkdir -p $KERNEL_OUT
                cd kernel/kernel-5.10
                make mrproper

                make ARCH=arm64 O=$KERNEL_OUT tegra_defconfig

                make ARCH=arm64 O=$KERNEL_OUT CROSS_COMPILE=$CROSS_COMPILE -j4 LOCALVERSION="-tegra"

                '''
            }
        }
        stage('Upload to S3') {
            steps {
                withAWS(region:'eu-central-1',credentials:'jenkins.conexus.cloud') {
                    sh 'echo "Uploading content with AWS creds"'
                    sh 'touch file.txt'
                    s3Upload(file:'file.txt', bucket:'l4t5-artifact-bucket', path:'path/to/target/file.txt')
                }
            }
        }
	}
}